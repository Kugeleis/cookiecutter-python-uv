[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "{{ cookiecutter.project_slug }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.project_description }}"
readme = "README.md"
requires-python = ">={{ cookiecutter.python_version }}"
license = { text = "{{ cookiecutter.license }}" }
authors = [
    { name = "{{ cookiecutter.author_name }}", email = "{{ cookiecutter.author_email }}" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: {{ cookiecutter.python_version }}",
    "Programming Language :: Python :: 3",
]
dependencies = []

[project.optional-dependencies]
dev = [
    "ruff>=0.3.0",
    "ipykernel>=6.29.0",
    {% if cookiecutter.use_pytest == "y" %}"pytest>=8.0.0",
    "pytest-cov>=4.0.0",{% endif %}
    "ipykernel>=6.29.0",
]

[project.urls]
"Homepage" = "https://github.com/{{ cookiecutter.author_name }}/{{ cookiecutter.project_slug }}"
"Bug Tracker" = "https://github.com/{{ cookiecutter.author_name }}/{{ cookiecutter.project_slug }}/issues"

[tool.ruff]
line-length = 88
target-version = "py{{ cookiecutter.python_version.replace('.', '') }}"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
]
ignore = [
    "E501",  # line too long (handled by formatter)
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

{% if cookiecutter.use_pytest == "y" %}
[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --cov={{ cookiecutter.project_slug }} --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
{% endif %}

[tool.uv]
dev-dependencies = [
    "ruff>=0.3.0",
    "ipykernel>=6.29.0",
    {% if cookiecutter.use_pytest == "y" %}"pytest>=8.0.0",
    "pytest-cov>=4.0.0",{% endif %}
]
